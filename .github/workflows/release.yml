name: Release

on:
  push:
    tags:
      - 'v*.*.*'
      
permissions:
  contents: write

jobs:
  release:
    name: Create Release
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install system dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libnss3-dev libatk-bridge2.0-dev libdrm2 libgtk-3-dev libgbm-dev
        
    - name: Build Next.js app
      run: npm run build
      
    - name: Build and publish Electron app
      run: npm run dist
      env:
        # Code signing certificates (add as repository secrets)
        # CSC_LINK: ${{ secrets.CSC_LINK }}
        # CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
        # WIN_CSC_LINK: ${{ secrets.WIN_CSC_LINK }}
        # WIN_CSC_KEY_PASSWORD: ${{ secrets.WIN_CSC_KEY_PASSWORD }}
        # APPLE_ID: ${{ secrets.APPLE_ID }}
        # APPLE_ID_PASS: ${{ secrets.APPLE_ID_PASS }}
        # APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload release assets
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          dist/*.exe
          dist/*.dmg
          dist/*.AppImage
          dist/*.deb
          dist/*.rpm
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}